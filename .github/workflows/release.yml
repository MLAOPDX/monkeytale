# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482

name: Monkeytale Continuous Integration
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Check-out
        uses: actions/checkout@v2
      - name: Install PDM
        uses: pdm-project/setup-pdm@main
        with:
          python-version: "3.10" # Same as actions/setup-python
          architecture: x64 # Same as actions/setup-python
          # version: 1.4.0 # The version of PDM to install. Leave empty to use latest from PyPI
          prerelease: false # Allow prereleases
          enable-pep582: true # Enable PEP 582 globally
      - name: Install application & dependencies
        run: |
          pdm --version
          pdm install -dG test
      - name: Unit test application
        run: |
          pdm run pytest --version
          pdm run pytest -v ./tests
      - name: Source code security analysis
        run: |
          pdm run bandit --version
          pdm run bandit --recursive --skip B101 -x ./tests -x ./__pypackages__ .

  Deploy:
    needs: [Test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release)')

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      # Set environment variables for Python Semantic Release to pick-up
      REPOSITORY_USERNAME: __token__
      REPOSITORY_PASSWORD: ${{ secrets.PYPI_TOKEN }}

    steps:
      - name: Check-out with history
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Pull history for semantic versioning from commit messages
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Python Semantic Release
        run: |
          pip install python-semantic-release
          git config user.name semantic-release
          git config user.email semantic-release@dwlib.com
      - name: Publish application to pypi.org
        run: semantic-release publish -D repository=pypi
      - name: Record version
        run: |
          mkdir -p artifacts/Deploy
          semantic-release --current print-version > artifacts/Deploy/semver
      - uses: actions/upload-artifact@v3
        with:
          name: Deploy
          path: artifacts/Deploy/*

  # Confirm deployment to PyPI was successful
  TestDeploy:
    needs: [Deploy]

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: Deploy
          path: artifacts/Deploy
      - name: Published version
        run: echo "Expecting Monkeytale v$(cat artifacts/Deploy/semver)"
      - name: Install PDM
        uses: pdm-project/setup-pdm@main
        with:
          python-version: "3.10" # Same as actions/setup-python
          architecture: x64 # Same as actions/setup-python
          # version: 1.4.0 # Which PDM version, empty uses latest from PyPI
          prerelease: false # Do not allow prerelease
          enable-pep582: true # Enable PEP 582 globally
      - name: Install Monkeytale
        run: |
          pdm --version
          pdm init -n
          pdm add monkeytale
      - name: Run Monkeytale
        run: |
          pdm run @ --version

  # Deploy to TestPyPI using commit with message: fix(test_release)
  # NOTE: This will bump version (major.minor.PATCH) for the package as a whole!
  DeployToTestPyPI:
    needs: [Test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'fix(test_release)')

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      # Set environment variables for Python Semantic Release
      REPOSITORY_USERNAME: __token__
      REPOSITORY_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}

    steps:
      - name: Check-out with history
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Pull history for semantic versioning from commit messages
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Python Semantic Release
        run: |
          pip install python-semantic-release
          git config user.name semantic-release
          git config user.email semantic-release@dwlib.com
      - name: Publish application to test.pypi.org
        run: |
          semantic-release publish -D repository=testpypi

  # Confirm deployment to PyPI was successful
  InstallFromTestPyPI:
    needs: [DeployToTestPyPI]

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Install PDM
        uses: pdm-project/setup-pdm@main
        with:
          python-version: "3.10" # Same as actions/setup-python
          architecture: x64 # Same as actions/setup-python
          # version: 1.4.0 # Which PDM version, empty uses latest from PyPI
          prerelease: false # Do not allow prerelease
          enable-pep582: true # Enable PEP 582 globally
      - name: Install Monkeytale
        run: |
          pdm --version
          pdm config pypi.url https://test.pypi.org/simple
          pdm init -n
          pdm add monkeytale
      - name: Run Monkeytale
        run: |
          pdm run @ --version
